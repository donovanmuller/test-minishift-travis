# sudo: required

# # This moves Kubernetes specific config files.
# env:
# - CHANGE_MINIKUBE_NONE_USER=true

# before_script:
# #- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.7.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# # Download and extract minishift
# #- curl -Lo minishift.tar.gz https://github.com/minishift/minishift/releases/download/v1.8.0/minishift-1.8.0-linux-amd64.tgz && tar xvzf minishift.tar.gz -C /tmp --strip-components=1 minishift-1.8.0-linux-amd64/minishift 
# #- sudo minikube start --vm-driver=none --kubernetes-version=v1.7.0
# # Fix the kubectl context, as it's often stale.
# #- minikube update-context
# # Wait for Kubernetes to be up and ready.
# #- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

# # Install OepnShift client tools (oc)
# - sudo curl -Lo openshift-origin-client-tools.tar.gz https://github.com/openshift/origin/releases/download/v3.6.1/openshift-origin-client-tools-v3.6.1-008f2d5-linux-64bit.tar.gz && tar xvzf openshift-origin-client-tools.tar.gz -C /usr/local/bin/ --strip-components=1 openshift-origin-client-tools-v3.6.1-008f2d5-linux-64bit/oc
# - oc cluster up

# script:
# # Create example Redis deployment on Kubernetes.
# #- kubectl cluster-info 
# #- kubectl run travis-example --image=redis
# #- kubectl get deployment

# - oc get nodes

language: java
jdk:
  - oraclejdk8

sudo: required
env: OPENSHIFT_VERSIONS="v3.6.1"
env: OPENSHIFT_OC_VERSION="v3.6.1"
env: OPENSHIFT_OC_COMMIT_ID="008f2d5"

before_script:
  - sudo mount --make-shared /
  - sudo service docker stop
  - sudo sed -i 's/DOCKER_OPTS=\"/DOCKER_OPTS=\"--insecure-registry 172.30.0.0\/16 /' /etc/default/docker
  - sudo service docker start
  - wget https://github.com/openshift/origin/releases/download/${OPENSHIFT_OC_VERSION}/openshift-origin-client-tools-${OPENSHIFT_OC_VERSION}-${OPENSHIFT_OC_COMMIT_ID}-linux-64bit.tar.gz
  - tar xvzOf openshift-origin-client-tools-${OPENSHIFT_OC_VERSION}-${OPENSHIFT_OC_COMMIT_ID}-linux-64bit.tar.gz > oc.bin
  - sudo mv oc.bin /usr/bin/oc
  - sudo chmod 755 /usr/bin/oc

script:
  - |
    set -e
      [[ ! -z "${OPENSHIFT_VERSIONS}" ]]
      for version in ${OPENSHIFT_VERSIONS}; do
        oc cluster up --version=${version}
        oc new-project scdf
        oc login -u system:admin

        oc cluster down
      done
    fi

after_failure:
 - oc login -u system:admin
 - oc get events
 
after_success:
  - |
    if [[ "${TRAVIS_BRANCH}" == "master" && "${TRAVIS_PULL_REQUEST}" == "false" ]]; then
      echo "Should we use this?"
    fi