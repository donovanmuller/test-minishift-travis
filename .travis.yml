# sudo: required

# # This moves Kubernetes specific config files.
# env:
# - CHANGE_MINIKUBE_NONE_USER=true

# before_script:
# #- curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.7.0/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# # Download and extract minishift
# #- curl -Lo minishift.tar.gz https://github.com/minishift/minishift/releases/download/v1.8.0/minishift-1.8.0-linux-amd64.tgz && tar xvzf minishift.tar.gz -C /tmp --strip-components=1 minishift-1.8.0-linux-amd64/minishift 
# #- sudo minikube start --vm-driver=none --kubernetes-version=v1.7.0
# # Fix the kubectl context, as it's often stale.
# #- minikube update-context
# # Wait for Kubernetes to be up and ready.
# #- JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

# # Install OepnShift client tools (oc)
# - sudo curl -Lo openshift-origin-client-tools.tar.gz https://github.com/openshift/origin/releases/download/v3.6.1/openshift-origin-client-tools-v3.6.1-008f2d5-linux-64bit.tar.gz && tar xvzf openshift-origin-client-tools.tar.gz -C /usr/local/bin/ --strip-components=1 openshift-origin-client-tools-v3.6.1-008f2d5-linux-64bit/oc
# - oc cluster up

# script:
# # Create example Redis deployment on Kubernetes.
# #- kubectl cluster-info 
# #- kubectl run travis-example --image=redis
# #- kubectl get deployment

# - oc get nodes

language: java

sudo: required
env: OPENSHIFT_VERSIONS="v3.6.1"
services:
- docker
addons:
  apt:
    packages:
    - bsdtar

before_install:
- |
    echo 'DOCKER_OPTS="$DOCKER_OPTS --insecure-registry 172.30.0.0/16"' > ${tmp}
    sudo mv ${tmp} /etc/default/docker
    sudo mount --make-shared /
    sudo service docker restart
    version="v3.6.1" commitId="008f2d5" && curl -L https://github.com/openshift/origin/releases/download/${version}/openshift-origin-client-tools-${version}-${commitId}-linux-64bit.tar.gz | tar -f - -x -z --strip-components=1 -C openshift-origin-client-tools-${version}-${commitId}-linux-64bit/oc

install:
- true

env:
  global:
  - secure: aJdsmnzKP4Ze/hXYv/qV65Qbv53rzlvSSV0sjy8y3iIfPkW3zTvoVafXA36x8hSaVP12BxZ9Ms2PiAjrougZYmGr8v3fr0F5xg7iIrhuB99sswGB37CmnbP/MnrJDrjarenhrIXcnpRT5PwsErsdhppxEP+dhXgw1lzTP2r4RN4jMKgBZdzKB4e3HfFbNZ12tdnY9Xey+VLj02EodQxmwVCHWVDFy4JwZwU9P+uL+6VSJopPaSWX+Ga8fu31RfymNzTc2P0mUgO9GBWMB0m/buz/MxlIVzM29AV47uBmZg2dDh9sWoIS12p9InTWV75JN9lfj040jsjrZ63ydiStyeBZ9Wf8irRxsXH3dZ4FJtIey7oDwObMRM20E7wln+93CNEWTQkmC9Gjz4JIap9zP1IR6SrnU+445xdmwwpw+G3JtDn+i/bpfvmse3RYOWyMUrnmSkrkOXn8PLMfc5ZB2vHZWF5KQQAaqqe6wCmii0cVGaEtpkdBdO+FqJ7UdS/F0VmGD11sEzutz4RIpYmYhz3gKe30bs9bZ6SjKgv8TsWTRKbMDv+2CMgAd/5xJcJx2/73Wb7FdzrNg4FNr6V3clN3aIEF9YCu/ph+49ahcU6jQURwz8NdAxDHVjGwhyI6UAz3GZAG5FP0ctyTjhlVxVcqMrAGZeBxKKFtGsHlyjc=

before_script:
- true

script:
- |
  set -e
    [[ ! -z "${OPENSHIFT_VERSIONS}" ]]
    for version in ${OPENSHIFT_VERSIONS}; do
      oc cluster up --version=${version}
      oc new-project scdf
      oc login -u system:admin

      oc cluster down
    done
  fi
after_failure:
- |
  oc login -u system:admin
  oc get events
after_success:
- |
  if [[ "${TRAVIS_BRANCH}" == "master" && "${TRAVIS_PULL_REQUEST}" == "false" ]]; then
    echo "Should we use this?"
  fi